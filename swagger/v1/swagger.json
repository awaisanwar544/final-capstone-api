{
  "openapi": "3.0.1",
  "info": {
    "title": "BookDev API",
    "version": "v1"
  },
  "paths": {
    "/api/password/forgot": {
      "post": {
        "summary": "Send email for password recovery",
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "Reset password email sent",
            "content": {
              "application/json": {
                "example": {
                  "message": "Reset password email sent."
                }
              }
            }
          },
          "404": {
            "description": "Email address not found. Please check and try again.",
            "content": {
              "application/json": {
                "example": {
                  "error": [
                    "Email address not found. Please check and try again."
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Email not present",
            "content": {
              "application/json": {
                "example": {
                  "error": "Email not present"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "victor.peralta.gomez@gmail.com"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        }
      }
    },
    "/api/password/reset": {
      "post": {
        "summary": "Change user password with token sent by email",
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "example": {
                  "status": "ok"
                }
              }
            }
          },
          "404": {
            "description": "Link not valid or expired. Try generating a new link.",
            "content": {
              "application/json": {
                "example": {
                  "error": [
                    "Link not valid or expired. Try generating a new link."
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_password": {
                    "type": "string",
                    "example": "123456"
                  },
                  "reset_password_token": {
                    "type": "string",
                    "example": "d9cae7e946dd6333d5f5"
                  }
                },
                "required": [
                  "new_password",
                  "reset_password_token"
                ]
              }
            }
          }
        }
      }
    },
    "/api/providers": {
      "get": {
        "summary": "Get providers list with API token",
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Get Providers list successfully",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 129,
                    "name": "Victor",
                    "bio": "A programmer from Mexico",
                    "cost": "10.0",
                    "image": "http://www.example.com/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBWkk9IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--611b78e7a57bc1b50c858a605a620f49310fa2f0/victor.jpg",
                    "github_profile": "https://github.com/VicPeralta",
                    "linkedin_profile": "https://www.linkedin.com/in/vicperalta/",
                    "twitter_profile": "https://twitter.com/VicPeralta",
                    "skills": [

                    ]
                  },
                  {
                    "id": 130,
                    "name": "Victor",
                    "bio": "A programmer from Mexico",
                    "cost": "10.0",
                    "image": "http://www.example.com/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBWk09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7d28445f0bf34b1573efec325bd54ce7f3aed8c9/victor.jpg",
                    "github_profile": "https://github.com/VicPeralta",
                    "linkedin_profile": "https://www.linkedin.com/in/vicperalta/",
                    "twitter_profile": "https://twitter.com/VicPeralta",
                    "skills": [

                    ]
                  },
                  {
                    "id": 131,
                    "name": "Victor",
                    "bio": "A programmer from Mexico",
                    "cost": "10.0",
                    "image": "http://www.example.com/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBWlE9IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4c78609f8fe660d749f82cc6d21f204bb9bb931e/victor.jpg",
                    "github_profile": "https://github.com/VicPeralta",
                    "linkedin_profile": "https://www.linkedin.com/in/vicperalta/",
                    "twitter_profile": "https://twitter.com/VicPeralta",
                    "skills": [

                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    },
                    "bio": {
                      "type": "string"
                    },
                    "cost": {
                      "type": "decimal"
                    },
                    "github_profile": {
                      "type": "string"
                    },
                    "linkedin_profile": {
                      "type": "string"
                    },
                    "twitter_profile": {
                      "type": "string"
                    },
                    "skills": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "bio"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized App",
            "content": {
              "application/json": {
                "example": {
                  "error:": "Unauthorized app"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a provider with User token",
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Create a provider with an admin",
            "content": {
              "application/json": {
                "example": {
                  "message": "Provider created"
                }
              }
            }
          },
          "401": {
            "description": "Create a provider with a user",
            "content": {
              "application/json": {
                "example": {
                  "error:": "Admin access required"
                }
              }
            }
          },
          "422": {
            "description": "Create a provider with incorrect data",
            "content": {
              "application/json": {
                "example": {
                  "name": [
                    "can't be blank"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Victor Peralta"
                  },
                  "bio": {
                    "type": "string",
                    "example": "A programmer from Mexico"
                  },
                  "cost": {
                    "type": "integer",
                    "example": 10
                  },
                  "skills": {
                    "type": "string",
                    "example": [
                      "Ruby"
                    ]
                  },
                  "image": {
                    "type": "file"
                  }
                },
                "required": [
                  "name",
                  "bio",
                  "cost",
                  "skills",
                  "image"
                ]
              }
            }
          }
        }
      }
    },
    "/api/providers/{id}": {
      "delete": {
        "summary": "Delete a provider with User token",
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": 1,
            "description": "The provider's ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a provider with an Admin",
            "content": {
              "application/json": {
                "example": {
                  "message": "Provider deleted"
                }
              }
            }
          },
          "401": {
            "description": "Delete a provider with a User",
            "content": {
              "application/json": {
                "example": {
                  "error:": "Admin access required"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get a provider's info with API token",
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": 1,
            "description": "The provider's ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get provider's info",
            "content": {
              "application/json": {
                "example": {
                  "id": 129,
                  "name": "Victor",
                  "bio": "A programmer from Mexico",
                  "cost": "10.0",
                  "image": "http://www.example.com/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBWkk9IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--611b78e7a57bc1b50c858a605a620f49310fa2f0/victor.jpg",
                  "github_profile": "https://github.com/VicPeralta",
                  "linkedin_profile": "https://www.linkedin.com/in/vicperalta/",
                  "twitter_profile": "https://twitter.com/VicPeralta",
                  "skills": [

                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/reservations": {
      "post": {
        "summary": "Create a reservation with User token",
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Reservation created",
            "content": {
              "application/json": {
                "example": {
                  "id": 53,
                  "user_id": 1,
                  "provider_id": 1,
                  "start_date": "2022-08-08",
                  "end_date": "2022-08-12",
                  "total_cost": "40.0",
                  "created_at": "2022-07-15T19:31:41.531Z",
                  "updated_at": "2022-07-15T19:31:41.531Z"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "example": {
                  "error:": "Unauthorized user"
                }
              }
            }
          },
          "422": {
            "description": "invalid request",
            "content": {
              "application/json": {
                "example": {
                  "total_cost": [
                    "can't be blank",
                    "is not a number"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "start_date": {
                    "type": "date",
                    "example": "2022-08-08"
                  },
                  "end_date": {
                    "type": "date",
                    "example": "2022-08-12"
                  },
                  "total_cost": {
                    "type": "decimal",
                    "example": "10"
                  }
                },
                "required": [
                  "provider_id",
                  "start_date",
                  "end_date",
                  "total_cost"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all reservations with User token",
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Get Reservation list",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "user_id": 1,
                    "provider_id": 1,
                    "start_date": "2022-08-08",
                    "end_date": "2022-08-14",
                    "total_cost": "60.0",
                    "created_at": "2022-07-15T19:31:41.516Z",
                    "updated_at": "2022-07-15T19:31:41.516Z"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "example": {
                  "error:": "Unauthorized user"
                }
              }
            }
          }
        }
      }
    },
    "/api/reservations/{id}": {
      "delete": {
        "summary": "Delete a reservation with User token",
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": 1,
            "description": "The reservation's ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation deleted",
            "content": {
              "application/json": {
                "example": {
                  "message": "Reservation deleted"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "example": {
                  "error:": "Unauthorized user"
                }
              }
            }
          },
          "400": {
            "description": "Reservation not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Couldn't find Reservation with 'id'=0"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/add": {
      "post": {
        "summary": "Sign up a new user with API token",
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "user signed up",
            "content": {
              "application/json": {
                "example": {
                  "name": "Victor",
                  "email": "victor.peralta.gomez@gmail.com",
                  "token": "eyJhbGciOiJIUzI1NiJ9.InZpY3Rvci5wZXJhbHRhLmdvbWV6QGdtYWlsLmNvbSI.kEwDeXJ7SdyFWwOtuKmV1Z7JQhtqT4-N3TRSgaELkQA",
                  "admin": true
                }
              }
            }
          },
          "401": {
            "description": "email already taken",
            "content": {
              "application/json": {
                "example": {
                  "error:": "email already taken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Parameter",
            "content": {
              "application/json": {
                "example": {
                  "error:": "password too short"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "victorperaltagomez@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "holahola"
                  },
                  "name": {
                    "type": "string",
                    "example": "Victor Peralta"
                  },
                  "admin": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "email",
                  "name",
                  "password"
                ]
              }
            }
          }
        }
      }
    },
    "/api/user": {
      "post": {
        "summary": "Log in user with API token",
        "security": [
          {
            "BearerAuth": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "user signed in",
            "content": {
              "application/json": {
                "example": {
                  "name": "Victor",
                  "email": "victorperaltagomez@gmail.com",
                  "token": "eyJhbGciOiJIUzI1NiJ9.InZpY3RvcnBlcmFsdGFnb21lekBnbWFpbC5jb20i.vaQagfHr4nyV4eo0CAgMqPx2gI4-lXLFneZNz5-C4UU",
                  "admin": false
                }
              }
            }
          },
          "401": {
            "description": "unauthorized user",
            "content": {
              "application/json": {
                "example": {
                  "error:": "Invalid Password"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "victor.peralta.gomez@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "holahola"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://{defaultHost}",
      "variables": {
        "defaultHost": {
          "default": "bookdev-api.herokuapp.com/"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}